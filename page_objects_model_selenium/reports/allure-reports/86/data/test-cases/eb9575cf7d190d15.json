{"uid":"eb9575cf7d190d15","name":"test_intentional_failure[chrome]","fullName":"tests.basic_test.TestBasic#test_intentional_failure","historyId":"e64799e7b886704d45fa83087fcbd6fa","time":{"start":1740707363253,"stop":1740707363253,"duration":0},"description":"Test that intentionally fails to demonstrate failure handling","descriptionHtml":"<p>Test that intentionally fails to demonstrate failure handling</p>\n","status":"broken","statusMessage":"_pytest.fixtures.FixtureLookupError: ('browser_version', <FixtureRequest for <Function test_intentional_failure[chrome]>>)","statusTrace":"file /app/tests/basic_test.py, line 71\n      @allure.story(\"Failing Test\")\n      @allure.severity(allure.severity_level.CRITICAL)\n      @allure.issue(\"DEMO-1234\", \"https://example.com/issue/1234\")\n      def test_intentional_failure(self, driver, selenium_browser, browser_version):\nE       fixture 'browser_version' not found\n>       available fixtures: _session_faker, _skip_sensitive, _verify_url, base_url, browser, browser_channel, browser_context_args, browser_name, browser_type, browser_type_launch_args, cache, capabilities, capfd, capfdbinary, caplog, capsys, capsysbinary, chrome_options, chrome_service, context, delete_output_dir, device, doctest_namespace, download_file, driver, driver_args, driver_class, driver_kwargs, driver_log, driver_path, edge_options, edge_service, extra, extras, faker, firefox_options, firefox_service, ie_options, ie_service, include_metadata_in_junit_xml, is_chromium, is_firefox, is_webkit, launch_browser, metadata, monkeypatch, page, playwright, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, remote_options, remote_url, safari_options, safari_service, selenium, sensitive_url, session_capabilities, testrun_uid, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, variables, worker_id\n>       use 'pytest --fixtures [testpath]' for help on them.\n\n/app/tests/basic_test.py:71","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"base_url","time":{"start":1740707336183,"stop":1740707336184,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"attachmentStep":false},{"name":"pytestconfig","time":{"start":1740707336184,"stop":1740707336184,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"attachmentStep":false},{"name":"_verify_url","time":{"start":1740707336184,"stop":1740707336184,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"attachmentStep":false},{"name":"delete_output_dir","time":{"start":1740707336185,"stop":1740707336185,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"attachmentStep":false},{"name":"_session_faker","time":{"start":1740707336185,"stop":1740707336199,"duration":14},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"attachmentStep":false},{"name":"sensitive_url","time":{"start":1740707336199,"stop":1740707336203,"duration":4},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"attachmentStep":false},{"name":"remote_url","time":{"start":1740707336203,"stop":1740707336203,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"attachmentStep":false},{"name":"_skip_sensitive","time":{"start":1740707363254,"stop":1740707363254,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"attachmentStep":false},{"name":"driver","time":{"start":1740707363254,"stop":1740707364935,"duration":1681},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"Test that intentionally fails to demonstrate failure handling","status":"broken","statusMessage":"_pytest.fixtures.FixtureLookupError: ('browser_version', <FixtureRequest for <Function test_intentional_failure[chrome]>>)","statusTrace":"file /app/tests/basic_test.py, line 71\n      @allure.story(\"Failing Test\")\n      @allure.severity(allure.severity_level.CRITICAL)\n      @allure.issue(\"DEMO-1234\", \"https://example.com/issue/1234\")\n      def test_intentional_failure(self, driver, selenium_browser, browser_version):\nE       fixture 'browser_version' not found\n>       available fixtures: _session_faker, _skip_sensitive, _verify_url, base_url, browser, browser_channel, browser_context_args, browser_name, browser_type, browser_type_launch_args, cache, capabilities, capfd, capfdbinary, caplog, capsys, capsysbinary, chrome_options, chrome_service, context, delete_output_dir, device, doctest_namespace, download_file, driver, driver_args, driver_class, driver_kwargs, driver_log, driver_path, edge_options, edge_service, extra, extras, faker, firefox_options, firefox_service, ie_options, ie_service, include_metadata_in_junit_xml, is_chromium, is_firefox, is_webkit, launch_browser, metadata, monkeypatch, page, playwright, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, remote_options, remote_url, safari_options, safari_service, selenium, sensitive_url, session_capabilities, testrun_uid, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, variables, worker_id\n>       use 'pytest --fixtures [testpath]' for help on them.\n\n/app/tests/basic_test.py:71","steps":[],"attachments":[{"uid":"52da2941f3cc7948","name":"log","source":"52da2941f3cc7948.txt","type":"text/plain","size":636},{"uid":"9aa18e9c229f0e48","name":"stdout","source":"9aa18e9c229f0e48.txt","type":"text/plain","size":642}],"parameters":[],"stepsCount":0,"attachmentsCount":2,"shouldDisplayMessage":true,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"driver::0","time":{"start":1740707364938,"stop":1740707389723,"duration":24785},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"story","value":"Failing Test"},{"name":"epic","value":"Setup Verification"},{"name":"feature","value":"Basic Test"},{"name":"severity","value":"critical"},{"name":"tag","value":"nondestructive"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"basic_test"},{"name":"subSuite","value":"TestBasic"},{"name":"host","value":"e130d6c28101"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.basic_test"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"selenium_browser","value":"'chrome'"}],"links":[{"name":"https://example.com/issue/1234","url":"DEMO-1234","type":"issue"}],"hidden":true,"retry":true,"extra":{"categories":[],"tags":["nondestructive"]},"source":"eb9575cf7d190d15.json","parameterValues":["'chrome'"]}